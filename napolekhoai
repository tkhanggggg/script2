-- Hàm phụ trợ: Lấy root part của nhân vật (HumanoidRootPart nếu có, nếu không thì Torso)
local function getRootPart(character)
    return character:FindFirstChild("HumanoidRootPart") or character:FindFirstChild("Torso")
end

-- Rayfield GUI (Menu: Farm Mobs)
local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()
local Window = Rayfield:CreateWindow({
    Name = "Farm Mobs",
    LoadingTitle = "Auto Farming System",
    LoadingSubtitle = "By Khoai",
    Theme = "Default"
})
local FarmTab = Window:CreateTab("Farm Mobs", 4483362458)
local player = game.Players.LocalPlayer

-- Các biến toàn cục
local autoAttackEnabled = false
local farmMovementEnabled = false
local autoSkillMasterEnabled = false
local teleportEnabled = false  -- Toggle để bật chức năng dịch chuyển đến chest
local npcFound = false       -- Biến để xác nhận có NPC (Pirate) hay không

-- Vị trí chờ mặc định (nếu không có NPC hoặc chest không tồn tại)
local waitingPosition = CFrame.new(-3355, 918, 15241)

-- Danh sách chest cần kiểm tra khi không có NPC
local chestNames = { "Common_Chest", "Rare_Chest", "Epic_Chest", "Legendary_Chest" }
local chestToggles = {}

FarmTab:CreateSection("Chest Teleport")

for _, chestName in ipairs(chestNames) do
    FarmTab:CreateToggle({
        Name = "Dịch chuyển đến " .. chestName,
        CurrentValue = false,
        Flag = chestName .. "_Toggle",
        Callback = function(Value)
            chestToggles[chestName] = Value
            print("Dịch chuyển đến " .. chestName .. ": " .. tostring(Value))
        end
    })
end

-- Khi không có NPC, kiểm tra và dịch chuyển đến chest theo danh sách
local function teleportToAvailableChest(hrp)
    for _, chestName in ipairs(chestNames) do
        local chest = workspace:FindFirstChild(chestName)
        if chestToggles[chestName] and chest and chest:IsA("BasePart") then
            hrp.CFrame = CFrame.new(chest.Position) + Vector3.new(0, 5, 0)
            print("Dịch chuyển đến " .. chestName .. " tại vị trí: " .. tostring(chest.Position))
            return  -- Ngừng kiểm tra sau khi đã dịch chuyển đến một chest hợp lệ
        end
    end
    -- Nếu không có chest nào, về vị trí chờ mặc định
    hrp.CFrame = waitingPosition
    print("Không tìm thấy chest, về vị trí chờ mặc định.")
end

-------------------------------------------------------
-- SECTION: Auto Attack (Luôn hoạt động khi có NPC)
-------------------------------------------------------
FarmTab:CreateToggle({
    Name = "Auto Attack",
    CurrentValue = false,
    Flag = "AutoAttackToggle",
    Callback = function(Value)
        autoAttackEnabled = Value
        spawn(function()
            local fireInput = game:GetService("ReplicatedStorage")
                :WaitForChild("ReplicatedModules")
                :WaitForChild("KnitPackage")
                :WaitForChild("Knit")
                :WaitForChild("Services")
                :WaitForChild("MoveInputService")
                :WaitForChild("RF")
                :WaitForChild("FireInput")
            print("[Auto Attack] Bắt đầu tấn công...")
            while autoAttackEnabled do
                if npcFound then  
                    fireInput:InvokeServer("MouseButton1")
                end
                task.wait(0.01)
            end
            print("[Auto Attack] Auto Attack đã dừng.")
        end)
    end
})

-------------------------------------------------------
-- SECTION: Farm Movement (Luôn giữ nhân vật ở sau NPC và xoay theo hướng NPC)
-------------------------------------------------------
FarmTab:CreateToggle({
    Name = "Farm Movement",
    CurrentValue = false,
    Flag = "FarmMovementToggle",
    Callback = function(Value)
        farmMovementEnabled = Value
        spawn(function()
            local livingFolder = workspace:FindFirstChild("Living")
            if not livingFolder then
                Rayfield:Notify({
                    Title = "Farm Movement",
                    Content = "Folder 'Living' không tồn tại!",
                    Duration = 3
                })
                return
            end
            local character = player.Character or player.CharacterAdded:Wait()
            local hrp = getRootPart(character)
            print("[Farm Movement] Bắt đầu di chuyển...")
            while farmMovementEnabled do
                local pirates = {}
                for _, child in ipairs(livingFolder:GetChildren()) do
                    local pr = getRootPart(child)
                    if child.Name == "Pirate" and pr then
                        table.insert(pirates, child)
                    end
                end

                if #pirates > 0 then
                    npcFound = true
                    local closestPirate = pirates[1]
                    for i = 2, #pirates do
                        local cp = getRootPart(closestPirate)
                        local pp = getRootPart(pirates[i])
                        if cp and pp and (pp.Position - hrp.Position).Magnitude < (cp.Position - hrp.Position).Magnitude then
                            closestPirate = pirates[i]
                        end
                    end
                    local npcHRP = getRootPart(closestPirate)
                    if npcHRP then
                        local desiredPos = npcHRP.Position - npcHRP.CFrame.LookVector * 6
                        hrp.CFrame = CFrame.lookAt(desiredPos, npcHRP.Position) -- Luôn giữ vị trí sau NPC và xoay về hướng của NPC
                        print("[Farm Movement] Giữ nhân vật phía sau NPC và xoay về hướng NPC:", npcHRP.Position)
                    end
                else
                    npcFound = false
                    teleportToAvailableChest(hrp)
                end
                task.wait(0.1)
            end
            print("[Farm Movement] Đã tắt Farm Movement.")
        end)
    end
})
